# AppVeyor.com is a Continuous Integration service to build and run tests under
# Windows. This .yml file is based on scikit-learn and statsmodels' Appveyor CI
# setups, adapted for use with Skoot

# This image contains the most pre-installed software (including supposedly
# MinGW and Miniconda?...)
image:
- Visual Studio 2015

environment:
  global:
    MINGW_32: C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin
    MINGW_64: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin
    OPENBLAS_32: https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-5f998ef_gcc7_1_0_win32.zip
    OPENBLAS_64: https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-5f998ef_gcc7_1_0_win64.zip
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script interpreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\build_tools\\appveyor\\run_with_env.cmd"
  PYPI_USERNAME: tgsmith61591.gh
  PYPI_PASSWORD:
    secure: gbT4E95dOsFHbxOmXk4C3gkIiaqeg0MGgvlE4rmxD4U=

  matrix:
    - PY_MAJOR_VER: 2
      PYTHON_ARCH: "x86"
      PYTHON_VERSION: "2.7"
      MINICONDA_MICRO_VERSION: "30"

    - PY_MAJOR_VER: 2
      PYTHON_ARCH: "x86_64"
      PYTHON_VERSION: "2.7"
      MINICONDA_MICRO_VERSION: "30"

    - PY_MAJOR_VER: 3
      PYTHON_ARCH: "x86"
      PYTHON_VERSION: "3.5"
      MINICONDA_MICRO_VERSION: "31"

    - PY_MAJOR_VER: 3
      PYTHON_ARCH: "x86_64"
      PYTHON_VERSION: "3.5"
      MINICONDA_MICRO_VERSION: "31"

install:
  - if [%PYTHON_ARCH%]==[32] SET PATH=%MINGW_32%;%PATH% & SET OPENBLAS=%OPENBLAS_32%
  - if [%PYTHON_ARCH%]==[64] SET PATH=%MINGW_64%;%PATH% & SET OPENBLAS=%OPENBLAS_64%

  # Echo some vars so we can hopefully debug more easily later...
  - ps: |
      echo $env:Path
      echo $env:OPENBLAS

# Conda is not working well on Windows because they haven't gotten
# their act together RE: powershell... until they do, we cannot get latest
build_script:
  - ps: Start-FileDownload "https://repo.continuum.io/miniconda/Miniconda$env:PY_MAJOR_VER-4.3.$env:MINICONDA_MICRO_VERSION-Windows-$env:PYTHON_ARCH.exe" C:\Miniconda.exe; echo "Finished downloading miniconda"
  # - ps: Start-FileDownload "https://repo.continuum.io/miniconda/Miniconda$env:PY_MAJOR_VER-latest-Windows-$env:PYTHON_ARCH.exe" C:\Miniconda.exe; echo "Finished downloading miniconda"
  - cmd: C:\Miniconda.exe /S /D=C:\Py
  - SET PATH=C:\Py;C:\Py\Scripts;C:\Py\Library\bin;%PATH%
  - conda config --set always_yes yes
  # - conda update conda

  # Debugging because Appveyor gives us no stack traces when this stuff breaks.
  - ps: echo "Conda version:"
  - conda --version
  - ps: echo "Python version=$env:PYTHON_VERSION"

  # Things we'll need for build/test
  - ps: conda create -n testenv --yes python=$env:PYTHON_VERSION numpy scipy cython scikit-learn pip pytest pytest-cov pandas patsy
  - activate testenv

  # Things we'll need for deployment
  - pip install wheel twine coverage codecov

  # Build the package
  - python setup.py develop

test_script:
  # Change to a non-source folder to make sure we run the tests on the
  # installed library.
  - "mkdir empty_folder"
  - "cd empty_folder"
  - pytest --showlocals --durations=20 --pyargs skoot

  # Move back to the project folder
  - "cd .."

after_test:
  # After the test, build the wheels (let travis handle the source build).
  - ECHO "Test complete, building wheels"
  - python setup.py sdist bdist_wheel
  - set PATH=%BK_PATH%

artifacts:
  - path: dist\*

deploy_script:
  - echo "Starting artifact deployment"
  - set PATH=%BK_PATH%
  - ps: If ($env:APPVEYOR_REPO_TAG -eq "true") { Invoke-Expression "twine upload -u tgsmith61591.gh -p $env:PYPI_PASSWORD --skip-existing dist/*" } Else { write-output "Not on a tagged commit, won't deploy to pypi"}
  #- ps: If ($env:APPVEYOR_REPO_BRANCH -eq "develop") { Invoke-Expression "twine upload -u tgsmith61591.gh -p $env:PYPI_PASSWORD --repository-url https://test.pypi.org/legacy/ --skip-existing dist/*" } Else { write-output "Not on a development commit, won't deploy to pypitest"}
